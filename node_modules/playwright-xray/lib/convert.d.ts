import type { TestResult } from '@playwright/test/reporter';
import { type XrayTest as XrayTestCloud } from './types/cloud.types';
import { type XrayTest as XrayTestServer } from './types/server.types';
import type { JiraXrayStatusMapping } from './types/xray.types';
type XrayTest = XrayTestServer | XrayTestCloud;
/**
 * Converts a map of issue keys and Playwright test results to Xray JSON. If there are multiple tests grouped under a single issue key, a
 * corresponding Xray test with iterations will be returned. Otherwise, a single Xray test will be returned without iteration data.
 *
 * Note: it does not matter where the results come from. They can be retries or they can be data-driven results for a single test. Both will
 * be converted to iterations accordingly.
 *
 * @param groupedResults the mapping of issue keys to Playwright results
 * @param options additional conversion options
 * @returns the corresponding Xray test JSON
 */
export declare function convertToXrayJson(groupedResults: Map<string, TestResult[]>, options: ConversionOptions): Promise<XrayTest[]>;
type ConversionOptions = {
    jiraType: 'server' | 'cloud';
    stepCategories: string[];
    receivedRegEx: RegExp;
    uploadScreenshot?: boolean;
    uploadTrace?: boolean;
    uploadVideo?: boolean;
    jiraXrayStatusMapping?: Partial<JiraXrayStatusMapping>;
};
export {};
